import keras_ocr
import cv2
import os
import numpy as np

# Function to perform inpainting using OpenCV
def inpaint_text(image, boxes):
    mask = np.zeros(image.shape[:2], dtype=np.uint8)  # Mask to mark the text regions
    for box in boxes:
        # Extract the box coordinates
        box = np.array(box).astype(int)
        # Draw filled polygon (text bounding box) on the mask
        cv2.fillPoly(mask, [box], 255)
    
    # Inpaint the image using Telea algorithm (or you can experiment with Navier-Stokes)
    inpainted_image = cv2.inpaint(image, mask, inpaintRadius=3, flags=cv2.INPAINT_TELEA)
    return inpainted_image

# Function to process images in a directory
def remove_text_from_images(input_dir, output_dir):
    # Initialize the Keras-OCR pipeline
    pipeline = keras_ocr.pipeline.Pipeline()

    # Ensure output directory exists
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)

    # Process each image in the input directory
    for image_name in os.listdir(input_dir):
        if image_name.endswith(('png', 'jpg', 'jpeg')):
            # Read the image
            image_path = os.path.join(input_dir, image_name)
            image = keras_ocr.tools.read(image_path)

            # Perform text detection
            prediction_groups = pipeline.recognize([image])
            boxes = [box for box, text in prediction_groups[0]]

            # Perform inpainting at the character level
            inpainted_image = inpaint_text(image, boxes)

            # Save the output image
            output_path = os.path.join(output_dir, image_name)
            cv2.imwrite(output_path, inpainted_image)

# Example usage
input_directory = 'path_to_input_directory'
output_directory = 'path_to_output_directory'

remove_text_from_images(input_directory, output_directory)

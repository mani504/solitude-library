import cv2
import json
import os
import numpy as np

# Function to remove borders around rectangles
def remove_borders(image_path, shapes, output_dir):
    # Load the image
    img = cv2.imread(image_path)
    if img is None:
        print(f"Error: Unable to load image '{image_path}'")
        return

    # Iterate over each shape in the JSON file
    for shape in shapes:
        if shape['shape_type'] == 'rectangle':
            points = shape['points']
            x_min, y_min = int(points[0][0]), int(points[0][1])
            x_max, y_max = int(points[1][0]), int(points[1][1])

            # Extract the region of interest (ROI) for the rectangle
            roi = img[y_min:y_max, x_min:x_max]

            # Convert to grayscale
            gray = cv2.cvtColor(roi, cv2.COLOR_BGR2GRAY)

            # Detect edges using Canny edge detection
            edges = cv2.Canny(gray, threshold1=50, threshold2=150)

            # Dilate the edges to make them thicker (cover the border)
            kernel = np.ones((3, 3), np.uint8)
            dilated_edges = cv2.dilate(edges, kernel, iterations=1)

            # Inpaint the border areas (remove them)
            inpainted_roi = cv2.inpaint(roi, dilated_edges, inpaintRadius=3, flags=cv2.INPAINT_TELEA)

            # Put the inpainted ROI back into the image
            img[y_min:y_max, x_min:x_max] = inpainted_roi

    # Save the modified image
    os.makedirs(output_dir, exist_ok=True)
    output_path = os.path.join(output_dir, os.path.basename(image_path))
    cv2.imwrite(output_path, img)
    print(f"Modified image saved to {output_path}")

# Main function to load the JSON and process the image
def main(json_file, output_dir):
    # Load the JSON file
    with open(json_file, 'r') as f:
        data = json.load(f)

    # Get the image path from the JSON file
    image_path = data["imagePath"]

    # If the image path is relative, assume it's in the same directory as the JSON file
    if not os.path.isabs(image_path):
        json_dir = os.path.dirname(json_file)
        image_path = os.path.join(json_dir, image_path)

    # Handle case where the image might have a _mask suffix
    if not os.path.exists(image_path):
        base_name, ext = os.path.splitext(image_path)
        image_path_mask = f"{base_name}_mask{ext}"
        if os.path.exists(image_path_mask):
            image_path = image_path_mask
        else:
            print(f"Error: Neither '{image_path}' nor '{image_path_mask}' found.")
            return

    # Get the shapes (rectangles) from the JSON file
    shapes = data["shapes"]

    # Remove the borders around rectangles in the image
    remove_borders(image_path, shapes, output_dir)

# Run the script
if __name__ == "__main__":
    import sys
    if len(sys.argv) != 3:
        print("Usage: python script_name.py shapes.json output_directory")
        sys.exit(1)

    json_file = sys.argv[1]
    output_dir = sys.argv[2]
    main(json_file, output_dir)
